blueprint:
  name: Danfoss Ally
  description: >
    Unified automation to calculate the average load and temperature across selected climate entities,
    synchronize target temperature, and handle window open detection and external switch control.
    The automation will only run at most every 10 minutes for temperature and load changes, but it will
    run immediately for window open/close events.
  domain: automation
  input:
    climate_entities:
      name: Climate Entities
      description: Select climate entities for load calculation, temperature synchronization, and window handling.
      selector:
        entity:
          domain: climate
          multiple: true
    temperature_entities:
      name: Temperature Sensor Entities
      description: Select temperature sensor entities for averaging room temperature.
      selector:
        entity:
          domain: sensor
          multiple: true
          device_class: temperature
    window_entities:
      name: Window Entities
      description: Select window entities for detecting open/close events (optional).
      selector:
        entity:
          domain: sensor
          multiple: true
      default: []  # Default to an empty list

trigger:
  - platform: state
    entity_id: !input climate_entities
    attribute: "temperature"

  - platform: state
    entity_id: !input climate_entities
    attribute: "load_estimate"

  - platform: state
    entity_id: !input temperature_entities

  - platform: state
    entity_id: !input window_entities

  - platform: time_pattern
    minutes: "/15"

condition:
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ trigger.platform == 'time_pattern' }}"
      - condition: template
        value_template: >
          {{ trigger.from_state.state != trigger.to_state.state or
             trigger.from_state.attributes.get('load_estimate') != trigger.to_state.attributes.get('load_estimate') }}

  - condition: template
    value_template: >
      {% set last_triggered = state_attr(this.entity_id, 'last_triggered') %}
      {% if trigger.entity_id in (window_entities or []) %}
        true
      {% else %}
        {% if last_triggered is not none %}
          {{ (as_timestamp(now()) - as_timestamp(last_triggered)) > 600 }}
        {% else %}
          true
        {% endif %}
      {% endif %}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.entity_id in (window_entities or []) }}
        sequence:
          # Handle window events immediately
          - service: script.danfoss_ally_room_assistant
            data:
              climate_entities: !input climate_entities
              temperature_entities: !input temperature_entities

  # Default block to handle non-window-related actions
  - delay:
      seconds: "{{ range(0, 121) | random }}"
  - service: script.danfoss_ally_room_assistant
    data:
      climate_entities: !input climate_entities
      temperature_entities: !input temperature_entities

mode: single